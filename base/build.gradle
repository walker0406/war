plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'

}

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 22
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        buildConfigField 'String', 'BASE_URL', "\"https://www.fastmock.site/mock/e745121f525f2c1b322f58e300086831/walker/api/\""

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    //p 工程
    sourceSets {
        main {
            def dirs = ['p_widget', 'p_theme']
            dirs.each { dir ->
                java.srcDir("src/$dir/java")
                res.srcDir("src/$dir/res")
            }
        }

    }
}

dependencies {

//    implementation 'androidx.core:core-ktx:1.3.2'
//    implementation 'androidx.appcompat:appcompat:1.2.0'
//    implementation 'com.google.android.material:material:1.3.0'


    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    api 'androidx.core:core-ktx:1.3.2'
    api 'androidx.appcompat:appcompat:1.2.0'
    api 'com.google.android.material:material:1.3.0'
    api 'androidx.constraintlayout:constraintlayout:+'
    //implementation 'androidx.lifecycle:lifecycle-livedata-ktx:+'
    api 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    api 'androidx.navigation:navigation-fragment-ktx:2.3.0'

    // LiveData

    api("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")
    // Lifecycles only (without ViewModel or LiveData)
    api("androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version")

    //implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.4.0-alpha0"

    api 'androidx.navigation:navigation-ui-ktx:2.3.0'
    // implementation 'androidx.legacy:legacy-support-v4:1.0.0'


    // Networking
    api "com.squareup.retrofit2:retrofit:+"
    api "com.squareup.retrofit2:converter-moshi:+"
    api "com.squareup.okhttp3:okhttp:+"
    api "com.squareup.okhttp3:logging-interceptor:+"

    kapt("com.squareup.moshi:moshi-kotlin-codegen:1.12.0")

    // Coroutine
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:+"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:+"

    //glide
    api "com.github.bumptech.glide:glide:+"


    //autosize
    api 'me.jessyan:autosize:1.2.1'

    api 'com.tencent:mmkv:1.2.2'

    //epoxy
    api "com.airbnb.android:epoxy:+"
    api "com.airbnb.android:epoxy-databinding:+"
    api 'com.airbnb.android:epoxy-paging3:+'
    // Add the annotation processor if you are using Epoxy's annotations (recommended)

    //implementation "androidx.paging:paging-runtime-ktx:+"

    api "androidx.paging:paging-runtime:3.0.0-alpha09"

    api("androidx.swiperefreshlayout:swiperefreshlayout:1.1.0")
    api("androidx.recyclerview:recyclerview-selection:+")
    //

    api("io.coil-kt:coil:1.3.1")

    api 'com.sankuai.waimai.router:router:+'
    kapt 'com.sankuai.waimai.router:compiler:+'
    kapt "com.airbnb.android:epoxy-processor:+"
    kapt "com.github.bumptech.glide:compiler:+"


    api 'com.jakewharton.timber:timber:4.7.1'

    api 'com.google.dagger:hilt-android:2.37'
    kapt 'com.google.dagger:hilt-compiler:2.37'

    api 'com.qmuiteam:qmui:2.0.0-alpha10'


    def qmui_arch_version = '2.0.0-alpha10'
    api "com.qmuiteam:arch:$qmui_arch_version"
    kapt "com.qmuiteam:arch-compiler:$qmui_arch_version" // use annotationProcessor if java

    //status bar
    api 'com.zackratos.ultimatebarx:ultimatebarx:0.6.0'

    def room_version = '2.3.0'
    kapt("androidx.room:room-compiler:$room_version")
    api("androidx.room:room-ktx:$room_version")


    api 'com.google.android.exoplayer:exoplayer:2.14.2'

}